logging:
  version: 1

  # Set to False to get log messages from external packages you're using
  disable_existing_loggers: False

  # Formatters that are assigned to outputs ("handlers") below
  formatters:
    simple:
      format: "%(asctime)s - %(name)s (%(filename)s:%(lineno)d) - %(levelname)s - %(message)s"
    colored:
      '()': myautoml.utils.logger.LevelFormatter
      format:
        # 0: "\x1b[0m%(asctime)s - %(name)s (%(filename)s:%(lineno)d) - %(levelname)s - %(message)s\x1b[0m"
        # 10: "\x1b[0m%(asctime)s - %(name)s (%(filename)s:%(lineno)d) - %(levelname)s - %(message)s\x1b[0m"
        # 20: "\x1b[0m%(asctime)s - %(name)s (%(filename)s:%(lineno)d) - %(levelname)s - %(message)s\x1b[0m"
        # 30: "\x1b[33m%(asctime)s - %(name)s (%(filename)s:%(lineno)d) - %(levelname)s - %(message)s\x1b[0m"
        # 40: "\x1b[31m%(asctime)s - %(name)s (%(filename)s:%(lineno)d) - %(levelname)s - %(message)s\x1b[0m"
        # 50: "\x1b[31;1m%(asctime)s - %(name)s (%(filename)s:%(lineno)d) - %(levelname)s - %(message)s\x1b[0m"

        0: "\x1b[38m%(asctime)s - %(name)s (%(filename)s:%(lineno)d) - %(levelname)s - %(message)s\x1b[0m"
        10: "\x1b[38;5;243m%(asctime)s - %(name)s (%(filename)s:%(lineno)d) - %(levelname)s - %(message)s\x1b[0m"
        20: "\x1b[38;5;110m%(asctime)s - %(name)s (%(filename)s:%(lineno)d) - %(levelname)s - %(message)s\x1b[0m"
        30: "\x1b[38;5;220m%(asctime)s - %(name)s (%(filename)s:%(lineno)d) - %(levelname)s - %(message)s\x1b[0m"
        40: "\x1b[38;5;196m%(asctime)s - %(name)s (%(filename)s:%(lineno)d) - %(levelname)s - %(message)s\x1b[0m"
        50: "\x1b[38;5;196;7m%(asctime)s - %(name)s (%(filename)s:%(lineno)d) - %(levelname)s - %(message)s\x1b[0m"

  # Outputs, one or more of which can be assigned to loggers
  handlers:
    console:
      class: logging.StreamHandler
      level: DEBUG
      formatter: colored
      stream: ext://sys.stdout

    debug_file_handler:
      class: logging.handlers.RotatingFileHandler
      level: DEBUG
      formatter: simple
      filename: logs/debug.log
      maxBytes: 20971520 # 20MB
      backupCount: 10
      encoding: utf8

    info_file_handler:
      class: logging.handlers.RotatingFileHandler
      level: INFO
      formatter: simple
      filename: logs/info.log
      maxBytes: 10485760 # 10MB
      backupCount: 10
      encoding: utf8

    warning_file_handler:
      class: logging.handlers.RotatingFileHandler
      level: WARNING
      formatter: simple
      filename: logs/warning.log
      maxBytes: 10485760 # 10MB
      backupCount: 10
      encoding: utf8

    error_file_handler:
      class: logging.handlers.RotatingFileHandler
      level: ERROR
      formatter: simple
      filename: logs/error.log
      maxBytes: 10485760 # 10MB
      backupCount: 10
      encoding: utf8

    critical_file_handler:
      class: logging.handlers.RotatingFileHandler
      level: CRITICAL
      formatter: simple
      filename: logs/critical.log
      maxBytes: 10485760 # 10MB
      backupCount: 10
      encoding: utf8

  # How is each logger handled? In particular, set external packages you're
  # using which spam the DEBUG, to log INFO and above
  loggers:
    azure:
      level: WARNING
      handlers: [ warning_file_handler ]
    git:
      level: INFO
      handlers: [ info_file_handler ]
    matplotlib:
      level: INFO
      handlers: [ info_file_handler ]
    urllib3:
      level: INFO
      handlers: [ info_file_handler ]

  # The root logger
  root:
    level: DEBUG
    handlers: [ console, debug_file_handler, info_file_handler ]
